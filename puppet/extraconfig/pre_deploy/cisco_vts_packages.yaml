heat_template_version: 2016-10-14

# This template is Cisco VTS version dependent
# TODO - verify and update packages for each VTS version

description: |
  'Cisco VTS Package upgrade/install'
parameters:
  server:
    type: string

  VTSversion:
    description: Current VTS version
    type: string
    default: '2.6.1'
  VTS_previous_version:
    description: Previous VTS version. Used in upgrade logic
    type: string
    default: '2.6.0'
  VTSUpdate:
    description: VTS Package install/update. Valid values 'false' or 'true'
    #Needs to be a string as the value is passed as a parameter to puppet
    type: string
    default: 'false'
  VTSUpgradeNewPackages:
    description: List of new packages. Each has to be enclosed by double quotes.
    type: string
    default: '
      "cisco-vts-agent", "python-cisco-controller",
      "cisco-vts-puppet-neutron", "cisco-vts-puppet-tripleo",
      "monit", "collectd", "cisco-vpfa-collectd-plugin", "cisco-vts-os-net-config",
      "vpp", "vpp-plugins", "vpfa", "lldpd", "vts-lldpd-configure", "cisco-vts-puppet-vpfa", "cisco-vts-puppet-fdio",
      "cisco-vts-os-util"
      '
  VTSUpgradeNewForgePackages:
    description: List of new packages from puppet forge. Each has to be enclosed by double quotes.
    type: string
    default: '"sbitio-monit --version 1.1.0", "puppetlabs-limits --version 0.1.0", "saz-rsyslog --version 5.0.0"'
  VTSyumRepos:
    description: Configuration of VTS package yum repos
    type: string
    default: |
      [cisco2.6.1.vts261]
      name=cisco2.6.1.vts261
      baseurl=http://devhub.cisco.com/artifactory/vts-yum-dev/2.6.1.vts261
      username=
      password=
      enabled = 1
      gpgcheck = 0
      metadata_expire = 86400

      [cisco2.6.1.vts261-os-newton]
      name=cisco2.6.1.vts261-os-newton
      baseurl=http://devhub.cisco.com/artifactory/vts-yum-dev/2.6.1.vts261-os-newton
      username=
      password=
      enabled = 1
      gpgcheck = 0
      metadata_expire = 86400
  RepoProxy:
    description: HTTP/HTTPS proxy configuration.
    type: string
    default: 'http://proxy.esl.cisco.com:8080/'

conditions:
  dont_update:
    equals:
      - get_param: VTSUpdate
      - 'false'

resources:

  VTSUpgradeScript:
    type: OS::Heat::SoftwareConfig
    properties:
      group: puppet
      inputs:
        - name: vts_current_version
        - name: vts_previous_version
        - name: vts_package_up
      config:
        str_replace:
          # PARTS OF THIS SCRIPT NEED TO BE ADAPTED TO EACH VTS VERSION
          # VTS 2.6.1
          # Puppet < 4.8 doesn't support configuring credentials in yum repo module, so need to create a repo file
          # Injecting puppet parameter settings via the environment has an issue with multiline strings, hence
          # using template and string substitution
          template: |
            # Puppet manifest sourced from cisco_vts_packages.yaml

            class vts_install {

              define install_puppet_mods() {
                exec { $name:
                  environment => ['http_proxy=REPOPROXY', 'https_proxy=REPOPROXY'],
                  path        => [ '/usr/sbin', '/sbin', '/usr/bin', '/bin' ],
                  command     => "puppet module install ${name}",
                }
              }

              if !empty([FORGEPACKAGES]) {
                install_puppet_mods{ [FORGEPACKAGES] : }
              }

              if !empty("VTS_YUM_REPOS") {
                file {'new VTS repo':
                  path    => "/etc/yum.repos.d/${::vts_current_version}.cisco_vts.repo",
                  ensure  => 'present',
                  content => "VTS_YUM_REPOS",
                }

                tidy {'remove previous VTS repos':
                  path    => "/etc/yum.repos.d/",
                  matches => ["${::vts_previous_version}*.repo"],
                  recurse => 1,
                }
              }

              if !empty([YUMPACKAGES]) {
                package { [YUMPACKAGES] :
                  ensure    => 'latest',
                  subscribe => File['new VTS repo']
                }
              }
            }

            class vts_fixups {

              #Fixup OSPD10 image issue

              file {'/etc/puppet/modules/collectd':
                ensure => 'link',
                target => '/etc/puppet/modules/module-collectd/',
              }

              #exec {'Disable non-default services':
              #  path       => [ '/usr/sbin', '/sbin', '/usr/bin', '/bin' ],
              #  #Ignore errors by setting last command to true
              #  command    => 'systemctl disable neutron-vts-agent; systemctl disable vpp; systemctl disable vpfa;
              #                  true',
              #  }

              if "lldpd" in [YUMPACKAGES] {
                service {'lldpd':
                  ensure => running,
                  enable => true,
                  hasstatus => false,
                }
              }

              if "cisco-vts-agent" in [YUMPACKAGES] {
                service {'neutron-vts-agent':
                  enable => false,
                  ensure => stopped,
                }
              }

              if "vpfa" in [YUMPACKAGES] {
                service {'vpfa':
                  enable => false,
                  ensure => stopped,
                }
              }

              if "vpp" in [YUMPACKAGES] {
                service {'vpp':
                  enable => true,
                  ensure => running,
                  hasstatus => false,
                }
                exec {'Patch os-refresh-config':
                #TODO: wdec - remove for Queens
                  path    => [ '/usr/sbin', '/sbin', '/usr/bin', '/bin' ],
                  command => 'sed -i.bak \'s/-v \^lo\$/-v -e \^lo\$ -e \^vnet\$/\' /usr/libexec/os-refresh-config/configure.d/20-os-net-config; true',
                }
              }
            }


            include vts_install
            include vts_fixups
            Class['vts_install'] -> Class['vts_fixups']


          params:
            VTS_YUM_REPOS: {get_param: VTSyumRepos}
            FORGEPACKAGES: {get_param: VTSUpgradeNewForgePackages }
            YUMPACKAGES: {get_param: VTSUpgradeNewPackages }
            REPOPROXY: {get_param: RepoProxy}


  VTSUpgrade:
    type: OS::Heat::SoftwareDeployment
    properties:
      name: Cisco_VTS_Upgrade
      server:  {get_param: server}
      # Only do include the install/fixups manifest conditionally
      config:
        if:
          - dont_update
          - ""
          - get_resource: VTSUpgradeScript
      actions: ['CREATE','UPDATE']
      input_values:
        vts_package_up: {get_param: VTSUpdate}
        vts_current_version: {get_param: VTSversion}
        vts_previous_version: {get_param: VTS_previous_version}
