heat_template_version: 2016-04-08

description: >
  Vpp service configured with Puppet for controller role

parameters:
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  VppCpuMainCoreCompute:
    default: ''
    description: VPP main thread core pinning.
    type: string
  VppCpuCorelistWorkersController:
    default: ''
    description: List of cores for VPP worker thread pinning
    type: string
  MonitoringSubscriptionVpp:
    default: 'overcloud-vpp'
    type: string
  VppExecCommands:
    default: ''
    description: Comma delimited list of VPP exec/CLI commands to run on startup
    type: comma_delimited_list
  VppCpuWorkersList:
    default: ''
    description: Comma separated list of cores for VPP worker thread pinning in
    type: string
  VppTunTapEnable:
    default: True
    description: Enable VPP tuntap driver
    type: boolean
  VppTunTapMtu:
    default: ''
    description: VPP tuntap interface MTU
    type: string
  VppTapCliMtu:
    default: ''
    description: VPP tapcli interface MTU
    type: string
  VppVhostUserDontDumpMem:
    default: false
    description: Avoids dumping vhost-user shared memory segments to core files.
    type: boolean

outputs:
  role_data:
    description: Role data for the Vpp role.
    value:
      service_name: vpp
      monitoring_subscription: {get_param: MonitoringSubscriptionVpp}
      config_settings:
        fdio::vpp_cpu_main_core: {get_param: VppCpuMainCoreController}
        fdio::vpp_cpu_corelist_workers: {get_param: VppCpuCorelistWorkersController}
        fdio::vpp_exec_commands: {get_param: VppExecCommands}
        fdio::vpp_tuntap_enable: {get_param: VppTunTapEnable}
        fdio::vpp_tuntap_mtu: {get_param: VppTunTapMtu}
        fdio::vpp_tapcli_mtu: {get_param: VppTapCliMtu}
        fdio::vpp_vhostuser_dont_dump_memory: {get_param: VppVhostUserDontDumpMem}
      step_config: |
        include ::tripleo::profile::base::vpp
      upgrade_tasks:
        - name: Check if vpp is deployed
          command: systemctl is-enabled vpp
          tags: common
          ignore_errors: True
          register: vpp_enabled
        - name: "PreUpgrade step0,validation: Check service vpp is running"
          shell: /usr/bin/systemctl show 'vpp' --property ActiveState | grep '\bactive\b'
          when: vpp_enabled.rc == 0
          tags: step0,validation
        - name: Stop vpp service
          tags: step1
          when: vpp_enabled.rc == 0
          service: name=vpp state=stopped
